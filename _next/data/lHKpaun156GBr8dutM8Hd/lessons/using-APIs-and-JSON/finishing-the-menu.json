{"pageProps":{"post":{"attributes":{},"html":"<p>Now it&#39;s time to finish the menu so it can use dynamic data. We will start by changing the ProductItem so it can render the image from a URL</p>\n<h2 id=\"productitem\">ProductItem</h2>\n<pre><code class=\"hljs language-dart\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MenuItem</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> Product product;\n  <span class=\"hljs-keyword\">final</span> <span class=\"hljs-built_in\">Function</span> onAdd;\n  <span class=\"hljs-keyword\">const</span> MenuItem({Key? key, <span class=\"hljs-keyword\">required</span> <span class=\"hljs-keyword\">this</span>.product, <span class=\"hljs-keyword\">required</span> <span class=\"hljs-keyword\">this</span>.onAdd})\n      : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  Widget build(BuildContext context) {\n    <span class=\"hljs-keyword\">return</span> Container(\n      padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.all(<span class=\"hljs-number\">4.0</span>),\n      child: Card(\n        elevation: <span class=\"hljs-number\">4</span>,\n        child: Column(\n          children: [\n            Image.network(product.imageUrl),\n            Padding(\n              padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.all(<span class=\"hljs-number\">8.0</span>),\n              child: Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      SelectableText(\n                        product.name,\n                        style: <span class=\"hljs-keyword\">const</span> TextStyle(fontWeight: FontWeight.bold),\n                      ),\n                      Text(<span class=\"hljs-string\">&quot;\\$<span class=\"hljs-subst\">${product.price.toStringAsFixed(<span class=\"hljs-number\">2</span>)}</span> ea&quot;</span>),\n                    ],\n                  ),\n                  ElevatedButton(\n                      onPressed: () {\n                        onAdd(product);\n                      },\n                      child: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&quot;Add&quot;</span>))\n                ],\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n</code></pre>\n<h2 id=\"menupage\">MenuPage</h2>\n<p>Then we redeign our MenuPage to loop through all the categories with a <code>ListView.builder</code> and within it we use a <code>for-in</code> to make other loop within their products. We also capture the <code>onAdd</code> event we defined as an argument in <code>ProductItem</code> and we add it to the cart.</p>\n<pre><code class=\"hljs language-dart\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MenuPage</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> DataManager dataManager;\n\n  <span class=\"hljs-keyword\">const</span> MenuPage({Key? key, <span class=\"hljs-keyword\">required</span> <span class=\"hljs-keyword\">this</span>.dataManager}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  Widget build(BuildContext context) {\n\n    <span class=\"hljs-keyword\">return</span> Padding(\n      padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.all(<span class=\"hljs-number\">8.0</span>),\n      child: FutureBuilder&lt;<span class=\"hljs-built_in\">List</span>&lt;Category&gt;&gt;(\n        future: dataManager.getMenu(),\n        builder: (context, snapshot) {\n          <span class=\"hljs-keyword\">if</span> (snapshot.hasData) {\n            <span class=\"hljs-keyword\">return</span> ListView.builder(\n                itemCount: snapshot.data!.length,\n                itemBuilder: (context, index) {\n                  <span class=\"hljs-comment\">// EACH CATEGORY STARTS HERE</span>\n                  <span class=\"hljs-keyword\">var</span> category = snapshot.data![index];\n                  <span class=\"hljs-keyword\">return</span> Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Padding(\n                        padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.only(\n                            top: <span class=\"hljs-number\">32.0</span>, bottom: <span class=\"hljs-number\">8.0</span>, left: <span class=\"hljs-number\">8.0</span>),\n                        child: Text(\n                          category.name,\n                          style: TextStyle(color: Colors.brown.shade400),\n                        ),\n                      ),\n                        ListView.builder(\n                          shrinkWrap: <span class=\"hljs-keyword\">true</span>,\n                          physics: ClampingScrollPhysics(),\n                          itemCount: category.products.length,\n                          itemBuilder: (context, index) {\n                            <span class=\"hljs-keyword\">return</span> MenuItem(\n                              product: category.products[index],\n                              onAdd: (p) =&gt; dataManager.cartAdd(p),\n                            );\n                          },\n                        )\n                      \n                    ],\n                  );\n                });\n          } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (snapshot.hasError) {\n            <span class=\"hljs-keyword\">return</span> Text(<span class=\"hljs-string\">&#x27;<span class=\"hljs-subst\">${snapshot.error}</span>&#x27;</span>);\n          }\n          <span class=\"hljs-comment\">// By default, show a loading spinner.</span>\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">const</span> CircularProgressIndicator();\n        },\n      ),\n    );\n  }\n}\n</code></pre>\n<p>A version with media queries for responsive design using <code>Wrap</code> can be like</p>\n<pre><code class=\"hljs language-dart\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MenuPage</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">final</span> DataManager dataManager;\n\n  <span class=\"hljs-keyword\">const</span> MenuPage({Key? key, <span class=\"hljs-keyword\">required</span> <span class=\"hljs-keyword\">this</span>.dataManager}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  Widget build(BuildContext context) {\n    <span class=\"hljs-keyword\">var</span> screenSize = MediaQuery.of(context).size;\n\n    <span class=\"hljs-keyword\">return</span> Padding(\n      padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.all(<span class=\"hljs-number\">8.0</span>),\n      child: FutureBuilder&lt;<span class=\"hljs-built_in\">List</span>&lt;Category&gt;&gt;(\n        future: dataManager.getMenu(),\n        builder: (context, snapshot) {\n          <span class=\"hljs-keyword\">if</span> (snapshot.hasData) {\n            <span class=\"hljs-keyword\">return</span> ListView.builder(\n                itemCount: snapshot.data!.length,\n                itemBuilder: (context, index) {\n                  <span class=\"hljs-comment\">// EACH CATEGORY STARTS HERE</span>\n                  <span class=\"hljs-keyword\">var</span> category = snapshot.data![index];\n                  <span class=\"hljs-keyword\">return</span> Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Padding(\n                        padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.only(\n                            top: <span class=\"hljs-number\">32.0</span>, bottom: <span class=\"hljs-number\">8.0</span>, left: <span class=\"hljs-number\">8.0</span>),\n                        child: Text(\n                          category.name,\n                          style: TextStyle(color: Colors.brown.shade400),\n                        ),\n                      ),\n                      <span class=\"hljs-keyword\">if</span> (screenSize.width &lt; <span class=\"hljs-number\">500</span>)\n                        <span class=\"hljs-comment\">// EACH MENU ITEM, Mobile Viewport</span>\n                        ListView.builder(\n                          shrinkWrap: <span class=\"hljs-keyword\">true</span>,\n                          physics: ClampingScrollPhysics(),\n                          itemCount: category.products.length,\n                          itemBuilder: (context, index) {\n                            <span class=\"hljs-keyword\">return</span> MenuItem(\n                              product: category.products[index],\n                              onAdd: (p) =&gt; dataManager.cartAdd(p),\n                            );\n                          },\n                        )\n                      <span class=\"hljs-keyword\">else</span>\n                        <span class=\"hljs-comment\">// EACH MENU ITEM, Large Viewport</span>\n                        Center(\n                          child: Wrap(\n                            alignment: WrapAlignment.spaceAround,\n                            children: [\n                              <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> product <span class=\"hljs-keyword\">in</span> category.products)\n                                SizedBox(\n                                  width: <span class=\"hljs-number\">350</span>,\n                                  child: MenuItem(\n                                    product: product,\n                                    onAdd: (p) =&gt; dataManager.cartAdd(p),\n                                  ),\n                                )\n                            ],\n                          ),\n                        )\n                    ],\n                  );\n                });\n          } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (snapshot.hasError) {\n            <span class=\"hljs-keyword\">return</span> Text(<span class=\"hljs-string\">&#x27;<span class=\"hljs-subst\">${snapshot.error}</span>&#x27;</span>);\n          }\n          <span class=\"hljs-comment\">// By default, show a loading spinner.</span>\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">const</span> CircularProgressIndicator();\n        },\n      ),\n    );\n  }\n}\n</code></pre>\n","slug":"finishing-the-menu","title":"Finishing the Menu","section":"Using APIs and JSON","icon":"bridge","filePath":"/home/runner/work/intro-flutter/intro-flutter/lessons/06-using-APIs-and-JSON/C-finishing-the-menu.md","nextSlug":"/intro-flutter/lessons/using-APIs-and-JSON/creating-the-cart-page","prevSlug":"/intro-flutter/lessons/using-APIs-and-JSON/requesting-data-with-futures"}},"__N_SSG":true}